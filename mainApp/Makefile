#############################################################################
# Makefile for building: mainApp
# Generated by qmake (1.07a) (Qt 3.3.3) on: Sat Oct 23 18:40:54 2010
# Project:  mainApp.pro
# Template: app
# Command: $(QMAKE) -o Makefile mainApp.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -m64  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT -Wno-deprecated
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -m64  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT -Wno-deprecated
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I. -IFile_Manager -IStatic_Lib -IGene_evaluation -Iorf -IProgressBarController -IstatusManager -IParamManager -IsessionManager -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib64 -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = F_Ratio.ui.h \
		GenePrediction.ui.h \
		referencedirectory.ui.h \
		createDirectory/createDirectory.ui.h \
		File_Manager/File_Manager.h \
		Gene_evaluation/evaluation.h \
		orf/orf.h \
		ParamManager/paramManager.h \
		Prediction/Gene_Prediction.h \
		Prediction/Gene_Prediction_File.h \
		Prediction/MinHeader.h \
		ProgressBarController/pbc.h \
		Random_Seq/Random_Sequence.h \
		Random_Seq/RandomDialog.ui.h \
		sessionManager/sessionManager.h \
		Static_Lib/Gene_Prediction_Lib.h \
		statusManager/statusManager.h \
		Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui.h
SOURCES = main.cpp \
		File_Manager/File_Manager.cpp \
		Gene_evaluation/evaluation.cpp \
		Gene_evaluation/genemark.cpp \
		Gene_evaluation/genepredict.cpp \
		Gene_evaluation/glimmer.cpp \
		Gene_evaluation/ncbi.cpp \
		orf/orf.cpp \
		ParamManager/paramManager.cpp \
		ProgressBarController/pbc.cpp \
		sessionManager/sessionManager.cpp \
		Static_Lib/Gene_Prediction_Lib.cpp \
		statusManager/statusManager.cpp
OBJECTS = main.o \
		File_Manager.o \
		evaluation.o \
		genemark.o \
		genepredict.o \
		glimmer.o \
		ncbi.o \
		orf.o \
		paramManager.o \
		pbc.o \
		sessionManager.o \
		Gene_Prediction_Lib.o \
		statusManager.o \
		F_Ratio.o \
		GenePrediction.o \
		referencedirectory.o \
		createDirectory.o \
		RandomDialog.o \
		Omega_Peak_Inputs.o
FORMS = F_Ratio.ui \
		GenePrediction.ui \
		referencedirectory.ui \
		createDirectory/createDirectory.ui \
		Random_Seq/RandomDialog.ui \
		Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui
UICDECLS = F_Ratio.h \
		GenePrediction.h \
		referencedirectory.h \
		createDirectory/createDirectory.h \
		Random_Seq/RandomDialog.h \
		Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h
UICIMPLS = F_Ratio.cpp \
		GenePrediction.cpp \
		referencedirectory.cpp \
		createDirectory/createDirectory.cpp \
		Random_Seq/RandomDialog.cpp \
		Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.cpp
SRCMOC   = ProgressBarController/moc_pbc.cpp \
		moc_F_Ratio.cpp \
		moc_GenePrediction.cpp \
		moc_referencedirectory.cpp \
		createDirectory/moc_createDirectory.cpp \
		Random_Seq/moc_RandomDialog.cpp \
		Prediction/get_Omega_PeakParam/moc_Omega_Peak_Inputs.cpp
OBJMOC = moc_pbc.o \
		moc_F_Ratio.o \
		moc_GenePrediction.o \
		moc_referencedirectory.o \
		moc_createDirectory.o \
		moc_RandomDialog.o \
		moc_Omega_Peak_Inputs.o
DIST	   = mainApp.pro
QMAKE_TARGET = mainApp
DESTDIR  = 
TARGET   = mainApp

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: mainApp.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile mainApp.pro
qmake: 
	@$(QMAKE) -o Makefile mainApp.pro

dist: 
	@mkdir -p .tmp/mainApp && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/mainApp/ && $(COPY_FILE) --parents F_Ratio.ui.h GenePrediction.ui.h referencedirectory.ui.h createDirectory/createDirectory.ui.h Random_Seq/RandomDialog.ui.h Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui.h .tmp/mainApp/ && ( cd `dirname .tmp/mainApp` && $(TAR) mainApp.tar mainApp && $(GZIP) mainApp.tar ) && $(MOVE) `dirname .tmp/mainApp`/mainApp.tar.gz . && $(DEL_FILE) -r .tmp/mainApp

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp GenePrediction.h \
		F_Ratio.h

File_Manager.o: File_Manager/File_Manager.cpp File_Manager/File_Manager.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o File_Manager.o File_Manager/File_Manager.cpp

evaluation.o: Gene_evaluation/evaluation.cpp Gene_evaluation/evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o evaluation.o Gene_evaluation/evaluation.cpp

genemark.o: Gene_evaluation/genemark.cpp Gene_evaluation/evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o genemark.o Gene_evaluation/genemark.cpp

genepredict.o: Gene_evaluation/genepredict.cpp Gene_evaluation/evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o genepredict.o Gene_evaluation/genepredict.cpp

glimmer.o: Gene_evaluation/glimmer.cpp Gene_evaluation/evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glimmer.o Gene_evaluation/glimmer.cpp

ncbi.o: Gene_evaluation/ncbi.cpp Gene_evaluation/evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ncbi.o Gene_evaluation/ncbi.cpp

orf.o: orf/orf.cpp orf/orf.h \
		ProgressBarController/pbc.h \
		statusManager/statusManager.h \
		File_Manager/File_Manager.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o orf.o orf/orf.cpp

paramManager.o: ParamManager/paramManager.cpp ParamManager/paramManager.h \
		File_Manager/File_Manager.h \
		GenePrediction.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o paramManager.o ParamManager/paramManager.cpp

pbc.o: ProgressBarController/pbc.cpp ProgressBarController/pbc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pbc.o ProgressBarController/pbc.cpp

sessionManager.o: sessionManager/sessionManager.cpp sessionManager/sessionManager.h \
		File_Manager/File_Manager.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sessionManager.o sessionManager/sessionManager.cpp

Gene_Prediction_Lib.o: Static_Lib/Gene_Prediction_Lib.cpp Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Gene_Prediction_Lib.o Static_Lib/Gene_Prediction_Lib.cpp

statusManager.o: statusManager/statusManager.cpp statusManager/statusManager.h \
		File_Manager/File_Manager.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o statusManager.o statusManager/statusManager.cpp

F_Ratio.h: F_Ratio.ui ParamManager/paramManager.h \
		File_Manager/File_Manager.h \
		GenePrediction.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(UIC) F_Ratio.ui -o F_Ratio.h

F_Ratio.cpp: F_Ratio.h F_Ratio.ui ParamManager/paramManager.h \
		File_Manager/File_Manager.h \
		GenePrediction.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(UIC) F_Ratio.ui -i F_Ratio.h -o F_Ratio.cpp

GenePrediction.h: GenePrediction.ui 
	$(UIC) GenePrediction.ui -o GenePrediction.h

GenePrediction.cpp: GenePrediction.h GenePrediction.ui 
	$(UIC) GenePrediction.ui -i GenePrediction.h -o GenePrediction.cpp

referencedirectory.h: referencedirectory.ui 
	$(UIC) referencedirectory.ui -o referencedirectory.h

referencedirectory.cpp: referencedirectory.h referencedirectory.ui 
	$(UIC) referencedirectory.ui -i referencedirectory.h -o referencedirectory.cpp

createDirectory/createDirectory.h: createDirectory/createDirectory.ui 
	$(UIC) createDirectory/createDirectory.ui -o createDirectory/createDirectory.h

createDirectory/createDirectory.cpp: createDirectory/createDirectory.h createDirectory/createDirectory.ui 
	$(UIC) createDirectory/createDirectory.ui -i createDirectory.h -o createDirectory/createDirectory.cpp

Random_Seq/RandomDialog.h: Random_Seq/RandomDialog.ui ParamManager/paramManager.h \
		File_Manager/File_Manager.h \
		GenePrediction.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(UIC) Random_Seq/RandomDialog.ui -o Random_Seq/RandomDialog.h

Random_Seq/RandomDialog.cpp: Random_Seq/RandomDialog.h Random_Seq/RandomDialog.ui ParamManager/paramManager.h \
		File_Manager/File_Manager.h \
		GenePrediction.h \
		Static_Lib/Gene_Prediction_Lib.h
	$(UIC) Random_Seq/RandomDialog.ui -i RandomDialog.h -o Random_Seq/RandomDialog.cpp

Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h: Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui 
	$(UIC) Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui -o Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h

Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.cpp: Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui 
	$(UIC) Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui -i Omega_Peak_Inputs.h -o Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.cpp

F_Ratio.o: F_Ratio.cpp F_Ratio.ui.h \
		F_Ratio.h

GenePrediction.o: GenePrediction.cpp GenePrediction.ui.h \
		GenePrediction.h

referencedirectory.o: referencedirectory.cpp referencedirectory.ui.h \
		referencedirectory.h

createDirectory.o: createDirectory/createDirectory.cpp createDirectory/createDirectory.ui.h \
		createDirectory/createDirectory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createDirectory.o createDirectory/createDirectory.cpp

RandomDialog.o: Random_Seq/RandomDialog.cpp Random_Seq/RandomDialog.h \
		Random_Seq/RandomDialog.ui.h \
		Random_Seq/RandomDialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RandomDialog.o Random_Seq/RandomDialog.cpp

Omega_Peak_Inputs.o: Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.cpp Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.ui.h \
		Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Omega_Peak_Inputs.o Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.cpp

moc_pbc.o: ProgressBarController/moc_pbc.cpp  ProgressBarController/pbc.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pbc.o ProgressBarController/moc_pbc.cpp

moc_F_Ratio.o: moc_F_Ratio.cpp  F_Ratio.h 

moc_GenePrediction.o: moc_GenePrediction.cpp  GenePrediction.h 

moc_referencedirectory.o: moc_referencedirectory.cpp  referencedirectory.h 

moc_createDirectory.o: createDirectory/moc_createDirectory.cpp  createDirectory/createDirectory.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createDirectory.o createDirectory/moc_createDirectory.cpp

moc_RandomDialog.o: Random_Seq/moc_RandomDialog.cpp  Random_Seq/RandomDialog.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RandomDialog.o Random_Seq/moc_RandomDialog.cpp

moc_Omega_Peak_Inputs.o: Prediction/get_Omega_PeakParam/moc_Omega_Peak_Inputs.cpp  Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Omega_Peak_Inputs.o Prediction/get_Omega_PeakParam/moc_Omega_Peak_Inputs.cpp

ProgressBarController/moc_pbc.cpp: $(MOC) ProgressBarController/pbc.h
	$(MOC) ProgressBarController/pbc.h -o ProgressBarController/moc_pbc.cpp

moc_F_Ratio.cpp: $(MOC) F_Ratio.h
	$(MOC) F_Ratio.h -o moc_F_Ratio.cpp

moc_GenePrediction.cpp: $(MOC) GenePrediction.h
	$(MOC) GenePrediction.h -o moc_GenePrediction.cpp

moc_referencedirectory.cpp: $(MOC) referencedirectory.h
	$(MOC) referencedirectory.h -o moc_referencedirectory.cpp

createDirectory/moc_createDirectory.cpp: $(MOC) createDirectory/createDirectory.h
	$(MOC) createDirectory/createDirectory.h -o createDirectory/moc_createDirectory.cpp

Random_Seq/moc_RandomDialog.cpp: $(MOC) Random_Seq/RandomDialog.h
	$(MOC) Random_Seq/RandomDialog.h -o Random_Seq/moc_RandomDialog.cpp

Prediction/get_Omega_PeakParam/moc_Omega_Peak_Inputs.cpp: $(MOC) Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h
	$(MOC) Prediction/get_Omega_PeakParam/Omega_Peak_Inputs.h -o Prediction/get_Omega_PeakParam/moc_Omega_Peak_Inputs.cpp

####### Install

install:  

uninstall:  

