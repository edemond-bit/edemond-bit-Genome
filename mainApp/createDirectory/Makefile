#############################################################################
# Makefile for building: createDirectory
# Generated by qmake (1.07a) (Qt 3.3.3) on: Fri Sep 28 10:13:38 2007
# Project:  createDirectory.pro
# Template: app
# Command: $(QMAKE) -o Makefile createDirectory.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -m32 -march=i386 -mtune=pentium4  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -m32 -march=i386 -mtune=pentium4  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt-3.3/mkspecs/default -I. -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = createDirectory.ui.h
SOURCES = 
OBJECTS = createDirectory.o
FORMS = createDirectory.ui
UICDECLS = createDirectory.h
UICIMPLS = createDirectory.cpp
SRCMOC   = moc_createDirectory.cpp
OBJMOC = moc_createDirectory.o
DIST	   = createDirectory.pro
QMAKE_TARGET = createDirectory
DESTDIR  = 
TARGET   = createDirectory

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: createDirectory.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf /usr/lib/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile createDirectory.pro
qmake: 
	@$(QMAKE) -o Makefile createDirectory.pro

dist: 
	@mkdir -p .tmp/createDirectory && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/createDirectory/ && $(COPY_FILE) --parents createDirectory.ui.h .tmp/createDirectory/ && ( cd `dirname .tmp/createDirectory` && $(TAR) createDirectory.tar createDirectory && $(GZIP) createDirectory.tar ) && $(MOVE) `dirname .tmp/createDirectory`/createDirectory.tar.gz . && $(DEL_FILE) -r .tmp/createDirectory

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

createDirectory.h: createDirectory.ui 
	$(UIC) createDirectory.ui -o createDirectory.h

createDirectory.cpp: createDirectory.h createDirectory.ui 
	$(UIC) createDirectory.ui -i createDirectory.h -o createDirectory.cpp

createDirectory.o: createDirectory.cpp createDirectory.ui.h \
		createDirectory.h

moc_createDirectory.o: moc_createDirectory.cpp  createDirectory.h 

moc_createDirectory.cpp: $(MOC) createDirectory.h
	$(MOC) createDirectory.h -o moc_createDirectory.cpp

####### Install

install:  

uninstall:  

